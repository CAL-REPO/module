# OCR Configuration File - ImageOCR Pipeline
# Complete settings for ImageOCR including image processing, OCR, and logging
# This configuration integrates: OCR + Pillow (ImageLoader) + LogManager

ocr:
  # ============================================================================
  # File & I/O Settings (OCR-specific)
  # ============================================================================
  file:
    file_path: "M:/CALife/CAShop - 구매대행/_code/scripts/01.jpg"  # Source image (required)
    save_img: false  # Save processed image
    save_dir: ""  # Directory for saved images (default: source directory)
    save_suffix: "_ocr"  # Suffix for saved image filename
    save_ocr_meta: true  # Save OCR metadata to JSON
    ocr_meta_dir: ""  # Directory for metadata (default: dest_dir)
    ocr_meta_name: "meta_ocr.json"  # Metadata filename

  # ============================================================================
  # OCR Provider Settings (PaddleOCR)
  # ============================================================================
  provider:
    provider: "paddle"
    langs:  # Language codes for OCR
      - "ch_sim"  # Simplified Chinese
      - "en"  # English
    min_conf: 0.5  # Minimum confidence threshold (0.0-1.0)
    paddle_device: "gpu"  # Device: "gpu" or "cpu"
    paddle_use_angle_cls: true  # Enable text angle classification
    paddle_instance: {}  # Internal: cached recognizer instances

  # ============================================================================
  # Image Preprocessing
  # ============================================================================
  preprocess:
    resized: false  # Whether image was resized
    max_width: 1200  # Max width for resizing (null = no resize)

  # ============================================================================
  # Debug Mode
  # ============================================================================
  debug: false  # Enable debug logging and extra validation

  # ============================================================================
  # Pillow Integration (ImageLoader fields)
  # Priority: OCR fields > Pillow fields for overlapping settings
  # ============================================================================
  source:
    path: ""  # Image source path (if set, overrides file.file_path)
    must_exist: true  # Require source to exist
    convert_mode: "RGB"  # PIL mode conversion (RGB, RGBA, L, etc.)

  target:
    directory: null  # Output directory (default: source directory)
    filename_template: "{stem}{suffix}{ext}"  # Output filename pattern
    suffix: "_ocr"  # Suffix for output files
    format: null  # Image format (null = keep original)
    quality: 95  # JPEG/WebP quality (1-100)
    ensure_unique: true  # Avoid overwriting by adding counter

  meta:
    enabled: true  # Persist metadata JSON
    directory: null  # Metadata directory (default: target directory)
    filename: "{stem}{suffix}.json"  # Metadata filename pattern

  # ============================================================================
  # Logging Configuration (LogManager integration)
  # ============================================================================
  log:
    enabled: true  # Enable logging
    level: "INFO"  # Log level: DEBUG, INFO, WARNING, ERROR
    console: true  # Log to console
    
    # File logging settings
    name: "ocr"  # Log file base name
    suffix: ""  # Log file suffix
    extension: ".log"  # Log file extension
    encoding: "utf-8"  # Log file encoding
    
    # Log directory settings
    use_cwd_logs: false  # Use ./logs in current directory
    logs_under: null  # Parent directory for logs (null = workspace root)
    subdir: "logs"  # Subdirectory name under logs_under
    
    # Rotation & retention
    rotation: "10 MB"  # Rotate when file reaches size (e.g., "10 MB", "1 GB")
    retention: "7 days"  # Keep logs for this duration
    compression: "zip"  # Compress rotated logs (zip, gz, bz2, xz)
    
    # Advanced logging options
    enqueue: true  # Async logging (thread-safe)
    backtrace: true  # Include full traceback on errors
    diagnose: false  # Include variable values in traceback (security risk)
    
    # External notifications (optional)
    use_notifier: false  # Enable error notifications
    notifier:
      enabled: false
      email_host: null
      email_port: 587
      email_sender: null
      email_password: null
      email_recipient: null
      slack_webhook_url: null


# ============================================================================
# Usage Examples
# ============================================================================

# Minimal usage (class-based):
# from ocr_utils import ImageOCR
# ocr = ImageOCR("configs/ocr.yaml")
# items, metadata, saved_path = ocr.run()

# Legacy usage (function-based):
# from ocr_utils import run_ocr
# items, metadata, saved_path = run_ocr("configs/ocr.yaml")

# Programmatic usage:
# from ocr_utils import ImageOCR, OcrPolicy
# from pillow_utils.policy import ImageSourcePolicy
# policy = OcrPolicy(
#     source=ImageSourcePolicy(path="image.jpg"),
#     provider=OcrProviderPolicy(langs=["en", "ch_sim"]),
#     log=LogPolicy(enabled=True, level="DEBUG")
# )
# ocr = ImageOCR(policy)
# items, metadata, saved_path = ocr.run()
