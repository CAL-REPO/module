# crawl_policy.yaml
navigation:
  base_url: "https://example.com/products"
  max_pages: 5
  paginate_selector: "a.next"
  wait_css: ".product-item"
  scroll:
    enabled: true
    step: 500
    delay: 0.5
    max_scrolls: 15

extractor:
  type: "JS"               # JSExtractor 선택
  js_script: |
    return Array.from(document.querySelectorAll('.product-item')).map(el => ({
      name: el.querySelector('.title')?.innerText,
      price: el.querySelector('.price')?.innerText,
      image: el.querySelector('img')?.src,
    }));
  target_selector: ".product-item"

wait:
  timeout: 10
  interval: 0.5
  condition: "css"

normalization:
  rules:
    - field: "name"
      action: "strip"
    - field: "price"
      action: "normalize_price"
    - field: "image"
      action: "absolute_url"
  path: "data/normalized"
  name_template: "{index}_{timestamp}"
  extension: ".json"

storage:
  base_dir: "data/output"
  targets:
    - kind: "json"
      sub_dir: "json"
    - kind: "image"
      sub_dir: "images"

http_session:
  headers:
    User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
    Accept-Language: "en-US,en;q=0.9"
  timeout: 15
  retries: 2
  use_browser_headers: false

concurrency: 3
retries: 2
